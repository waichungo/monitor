// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: model.proto
// Protobuf C++ Version: 5.28.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_model_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_model_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_model_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_model_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_model_2eproto;
namespace binmessage {
class BinaryMessage;
struct BinaryMessageDefaultTypeInternal;
extern BinaryMessageDefaultTypeInternal _BinaryMessage_default_instance_;
}  // namespace binmessage
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace binmessage {

// ===================================================================


// -------------------------------------------------------------------

class BinaryMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:binmessage.BinaryMessage) */ {
 public:
  inline BinaryMessage() : BinaryMessage(nullptr) {}
  ~BinaryMessage() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BinaryMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline BinaryMessage(const BinaryMessage& from) : BinaryMessage(nullptr, from) {}
  inline BinaryMessage(BinaryMessage&& from) noexcept
      : BinaryMessage(nullptr, std::move(from)) {}
  inline BinaryMessage& operator=(const BinaryMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinaryMessage& operator=(BinaryMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinaryMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const BinaryMessage* internal_default_instance() {
    return reinterpret_cast<const BinaryMessage*>(
        &_BinaryMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(BinaryMessage& a, BinaryMessage& b) { a.Swap(&b); }
  inline void Swap(BinaryMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinaryMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinaryMessage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BinaryMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinaryMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BinaryMessage& from) { BinaryMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BinaryMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "binmessage.BinaryMessage"; }

 protected:
  explicit BinaryMessage(::google::protobuf::Arena* arena);
  BinaryMessage(::google::protobuf::Arena* arena, const BinaryMessage& from);
  BinaryMessage(::google::protobuf::Arena* arena, BinaryMessage&& from) noexcept
      : BinaryMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRecepientFieldNumber = 3,
    kSenderFieldNumber = 4,
    kMetaFieldNumber = 5,
    kDataFieldNumber = 6,
    kCompressedFieldNumber = 1,
    kCodeFieldNumber = 2,
  };
  // string recepient = 3;
  void clear_recepient() ;
  const std::string& recepient() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_recepient(Arg_&& arg, Args_... args);
  std::string* mutable_recepient();
  PROTOBUF_NODISCARD std::string* release_recepient();
  void set_allocated_recepient(std::string* value);

  private:
  const std::string& _internal_recepient() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_recepient(
      const std::string& value);
  std::string* _internal_mutable_recepient();

  public:
  // string sender = 4;
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string meta = 5;
  void clear_meta() ;
  const std::string& meta() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_meta(Arg_&& arg, Args_... args);
  std::string* mutable_meta();
  PROTOBUF_NODISCARD std::string* release_meta();
  void set_allocated_meta(std::string* value);

  private:
  const std::string& _internal_meta() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_meta(
      const std::string& value);
  std::string* _internal_mutable_meta();

  public:
  // bytes data = 6;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // bool compressed = 1;
  void clear_compressed() ;
  bool compressed() const;
  void set_compressed(bool value);

  private:
  bool _internal_compressed() const;
  void _internal_set_compressed(bool value);

  public:
  // int32 code = 2;
  void clear_code() ;
  ::int32_t code() const;
  void set_code(::int32_t value);

  private:
  ::int32_t _internal_code() const;
  void _internal_set_code(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:binmessage.BinaryMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      52, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BinaryMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BinaryMessage& from_msg);
    ::google::protobuf::internal::ArenaStringPtr recepient_;
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::ArenaStringPtr meta_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    bool compressed_;
    ::int32_t code_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_model_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// BinaryMessage

// bool compressed = 1;
inline void BinaryMessage::clear_compressed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compressed_ = false;
}
inline bool BinaryMessage::compressed() const {
  // @@protoc_insertion_point(field_get:binmessage.BinaryMessage.compressed)
  return _internal_compressed();
}
inline void BinaryMessage::set_compressed(bool value) {
  _internal_set_compressed(value);
  // @@protoc_insertion_point(field_set:binmessage.BinaryMessage.compressed)
}
inline bool BinaryMessage::_internal_compressed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.compressed_;
}
inline void BinaryMessage::_internal_set_compressed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compressed_ = value;
}

// int32 code = 2;
inline void BinaryMessage::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = 0;
}
inline ::int32_t BinaryMessage::code() const {
  // @@protoc_insertion_point(field_get:binmessage.BinaryMessage.code)
  return _internal_code();
}
inline void BinaryMessage::set_code(::int32_t value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:binmessage.BinaryMessage.code)
}
inline ::int32_t BinaryMessage::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_;
}
inline void BinaryMessage::_internal_set_code(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = value;
}

// string recepient = 3;
inline void BinaryMessage::clear_recepient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recepient_.ClearToEmpty();
}
inline const std::string& BinaryMessage::recepient() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:binmessage.BinaryMessage.recepient)
  return _internal_recepient();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BinaryMessage::set_recepient(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recepient_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:binmessage.BinaryMessage.recepient)
}
inline std::string* BinaryMessage::mutable_recepient() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_recepient();
  // @@protoc_insertion_point(field_mutable:binmessage.BinaryMessage.recepient)
  return _s;
}
inline const std::string& BinaryMessage::_internal_recepient() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recepient_.Get();
}
inline void BinaryMessage::_internal_set_recepient(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recepient_.Set(value, GetArena());
}
inline std::string* BinaryMessage::_internal_mutable_recepient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.recepient_.Mutable( GetArena());
}
inline std::string* BinaryMessage::release_recepient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:binmessage.BinaryMessage.recepient)
  return _impl_.recepient_.Release();
}
inline void BinaryMessage::set_allocated_recepient(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recepient_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.recepient_.IsDefault()) {
          _impl_.recepient_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:binmessage.BinaryMessage.recepient)
}

// string sender = 4;
inline void BinaryMessage::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& BinaryMessage::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:binmessage.BinaryMessage.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BinaryMessage::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:binmessage.BinaryMessage.sender)
}
inline std::string* BinaryMessage::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:binmessage.BinaryMessage.sender)
  return _s;
}
inline const std::string& BinaryMessage::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void BinaryMessage::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* BinaryMessage::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* BinaryMessage::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:binmessage.BinaryMessage.sender)
  return _impl_.sender_.Release();
}
inline void BinaryMessage::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sender_.IsDefault()) {
          _impl_.sender_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:binmessage.BinaryMessage.sender)
}

// string meta = 5;
inline void BinaryMessage::clear_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.meta_.ClearToEmpty();
}
inline const std::string& BinaryMessage::meta() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:binmessage.BinaryMessage.meta)
  return _internal_meta();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BinaryMessage::set_meta(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.meta_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:binmessage.BinaryMessage.meta)
}
inline std::string* BinaryMessage::mutable_meta() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_meta();
  // @@protoc_insertion_point(field_mutable:binmessage.BinaryMessage.meta)
  return _s;
}
inline const std::string& BinaryMessage::_internal_meta() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.meta_.Get();
}
inline void BinaryMessage::_internal_set_meta(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.meta_.Set(value, GetArena());
}
inline std::string* BinaryMessage::_internal_mutable_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.meta_.Mutable( GetArena());
}
inline std::string* BinaryMessage::release_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:binmessage.BinaryMessage.meta)
  return _impl_.meta_.Release();
}
inline void BinaryMessage::set_allocated_meta(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.meta_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.meta_.IsDefault()) {
          _impl_.meta_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:binmessage.BinaryMessage.meta)
}

// bytes data = 6;
inline void BinaryMessage::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& BinaryMessage::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:binmessage.BinaryMessage.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BinaryMessage::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:binmessage.BinaryMessage.data)
}
inline std::string* BinaryMessage::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:binmessage.BinaryMessage.data)
  return _s;
}
inline const std::string& BinaryMessage::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void BinaryMessage::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* BinaryMessage::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* BinaryMessage::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:binmessage.BinaryMessage.data)
  return _impl_.data_.Release();
}
inline void BinaryMessage::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:binmessage.BinaryMessage.data)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace binmessage


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_model_2eproto_2epb_2eh
